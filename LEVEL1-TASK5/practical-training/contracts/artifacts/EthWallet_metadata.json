{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "funName",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "LogDeposit",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "getBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdraw3",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"withdraw3()": {
					"notice": "revert The transaction has been reverted to the initial state. Note: The called function should be payable if you send value and the value you send should be less than your current balance. You may want to cautiously increase the gas limit if the transaction went out of gas."
				}
			},
			"notice": "//这一个实战主要是加深大家对 3 个取钱方法的使用。 // //- 任何人都可以发送金额到合约 //- 只有 owner 可以取款 //- 3 种取钱方式",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/8_EthWallet.sol": "EthWallet"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/8_EthWallet.sol": {
			"keccak256": "0xa4f7129cbfbef6e1cbd3707468c330ec82462ec756da857883d91ea763240835",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://af166a22ec61c78981664204d7e8b047977bc8e616f4e48889387ee95ae8f712",
				"dweb:/ipfs/QmNrjC3k4NaFMhccAHF23avTFWdQ4MXngnn9Aj7qXzSmr7"
			]
		}
	},
	"version": 1
}